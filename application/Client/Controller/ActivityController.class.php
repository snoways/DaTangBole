<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/11/19 0019
 * Time: 23:22
 */

namespace Client\Controller;


use Think\Page;

class ActivityController extends MapiBaseController
{

    private $where = [];
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $uid = S($this->data['token']);
//        if ($uid) {
//            $p_xy = M('parents')->where(['id'=>$uid])->getField('p_xy');
//            $adcode = getCity($p_xy);
//            $cityid = M('areas')->where(['areaId'=>$adcode])->getField('parentId');
//            $this->where = ['acs.city'=>$cityid];
//
//        }
    }

    public function index()
    {
        $category_id = $this->data['category_id'];
        $activity_order = D('activity_order');
        $ActivityCate = D('ActivityCate');
        $category = [];
        $layout_type = 1;
        if ($category_id) {
            $layout_type = $ActivityCate
                ->where(['id'=>$category_id,'status'=>1,'pid'=>0])
                ->getField('layout_type');
            if (!$layout_type) $this->ApiReturn(-1,"分类不存在或不可用");
            $category = ['in',$category_id];
            $ids = $ActivityCate
                ->where(array('status'=>1,'pid'=>$category_id))
                ->order('sort')
                ->getField('id',true);
            if ($ids) {
                array_unshift($ids,$category_id);
                $category[1] = $ids;
            }
        } else {
            $data['category'] = $ActivityCate
                ->where(array('status'=>1,'pid'=>0))
                ->field('id,name,layout_type,is_selected')
                ->order('sort')
                ->select();
            foreach ($data['category'] as &$cate) {
                //默认选中的
                if ($cate['is_selected'] == 1) {
                    $category = ['in',$cate['id']];
                    $layout_type = $cate['layout_type'];
                    $category_id = $cate['id'];
                    $ids = $ActivityCate
                        ->where(array('status'=>1,'pid'=>$cate['id']))
                        ->order('sort')
                        ->getField('id',true);
                    if ($ids) {
                        array_unshift($ids,$cate['id']);
                        $category[1] = $ids;
                    }
                    break;
                }
            }
        }
        $Activity = D('Activity');
        if ($layout_type == 1) {
            $where = array_merge($this->where,array('a.status'=>1,'a.state'=>1,'a.recommended'=>1,'a.cate_id'=>$category));
            $data['recommended'] = $Activity
                ->alias('a')
                ->join("LEFT JOIN __ACTIVITY_START__ acs ON a.id = acs.act_id")
                ->where($where)
                ->field('a.id,a.title,a.img,a.age_max,a.age_min ,a.target,a.money')
                ->limit(4)
                ->select();

            foreach ($data['recommended'] as &$recommended) {
                if ($recommended['max'] == 0) {
                    $recommended['age_title'] = $recommended['age_min'].'岁以上';
                } else {
                    $recommended['age_title'] = $recommended['age_min'].'-'.$recommended['age_max'].'岁';
                }
                $aod_count = $activity_order
                    ->alias('ao')
                    ->join('LEFT JOIN __ACT_ORDER_DETAIL__ aod ON ao.id = aod.order_id')
                    ->where(['ao.status'=>['in',[2,3]],'ao.activity_id'=>$recommended['id']])
                    ->field("count('aod.*') aod_count")
                    ->find();
                $recommended['sign_up_num'] = $aod_count['aod_count'];
                unset($aod_count);
                unset($recommended['age_min']);
                unset($recommended['age_max']);
            }
            $data['hot_address'] = D('TargetPlace')
                ->field('id,name,image')
                ->select();
            $where = array_merge($this->where,array('a.status'=>1,'a.state'=>1,'a.is_hot'=>1,'a.cate_id'=>$category));
            $data['is_hot'] = $Activity
                ->alias('a')
                ->join("LEFT JOIN __ACTIVITY_START__ acs ON a.id = acs.act_id")
                ->where($where)
                ->field('a.id,a.title,a.img,a.age_max,a.age_min ,a.target,a.money')
                ->limit(10)
                ->select();
            foreach ($data['is_hot'] as &$is_hot) {
                if ($is_hot['max'] == 0) {
                    $is_hot['age_title'] = $is_hot['age_min'].'岁以上';
                } else {
                    $is_hot['age_title'] = $is_hot['age_min'].'-'.$is_hot['age_max'].'岁';
                }
                $aod_count = $activity_order
                    ->alias('ao')
                    ->join('LEFT JOIN __ACT_ORDER_DETAIL__ aod ON ao.id = aod.order_id')
                    ->where(['ao.status'=>['in',[2,3]],'ao.activity_id'=>$is_hot['id']])
                    ->field("count('aod.*') aod_count")
                    ->find();
                $is_hot['sign_up_num'] = $aod_count['aod_count'];
                unset($aod_count);
                unset($is_hot['age_min']);
                unset($is_hot['age_max']);
            }
        } else {
            $data['category2'] = $ActivityCate
                ->where(array('status'=>1,'pid'=>$category_id))
                ->field('id,name,img')
                ->order('sort')
                ->select();
            $data['ages'] = M('ages')->order('id')->select();
            foreach ($data['ages'] as &$age) {
                if ($age['max'] == 0) {
                    $age['title'] = $age['min'].'岁以上';
                } else {
                    $age['title'] = $age['min'].'-'.$age['max'].'岁';
                }
                unset($age['min']);
                unset($age['max']);
            }
            $where = array_merge($this->where,array('a.status'=>1,'a.state'=>1,'a.recommended'=>1,'a.cate_id'=>$category));
            $data['recommended'] = $Activity
                ->alias('a')
                ->join('LEFT JOIN __ACTIVITY_CATE__ ac ON a.cate_id = ac.id')
                ->join("LEFT JOIN __ACTIVITY_START__ acs ON a.id = acs.act_id")
                ->field('a.id,a.title,a.extra_title,a.img,a.age_max,a.age_min ,a.target,a.money,a.spell_refund,a.spell,ac.name cate_name')
                ->where($where)
                ->limit(8)
                ->select();
            foreach ($data['recommended'] as &$recommended) {
                if ($recommended['age_max'] == 0) {
                    $recommended['age_title'] = $recommended['age_min'].'岁以上';
                } else {
                    $recommended['age_title'] = $recommended['age_min'].'-'.$recommended['age_max'].'岁';
                }
                $aod_count = $activity_order
                    ->alias('ao')
                    ->join('LEFT JOIN __ACT_ORDER_DETAIL__ aod ON ao.id = aod.order_id')
                    ->where(['ao.status'=>['in',[2,3]],'ao.activity_id'=>$recommended['id']])
                    ->field("count('aod.*') aod_count")
                    ->find();
                $recommended['sign_up_num'] = $aod_count['aod_count'];
                unset($aod_count);
                unset($recommended['age_min']);
                unset($recommended['age_max']);
            }

        }

        $this->ApiReturn(1,"成功",$data);
    }

    /*
     *  获取数据
     */
    public function lists(){

        $data = $this->data;
        $where = array_merge($this->where,['a.status'=>1, 'a.state'=>1]);
        $activity_order = D('activity_order');
        $page = $data['page']?$data['page']:1;
        if($data['cate_id']) {
            $where['cate_id'] = ['in',$data['cate_id']];
            $ids = M('activity_cate')
                ->where(array('status'=>1,'pid'=>$data['cate_id']))
                ->order('sort')
                ->getField('id',true);
            if ($ids) {
                array_unshift($ids,$data['cate_id']);
                $where['cate_id'][1] = $ids;
            }
        }
        if ($data['is_hot']==1) $where['a.is_hot'] = 1;
        if ($data['recommended']==1) $where['a.recommended'] = 1;
        if ($data['age_id']) $where['a.age_id'] = ['like',"%,{$data['age_id']},%"];
        if ($data['hot_address_id']) $where['a.target_place_id'] = ['like',"%,{$data['hot_address_id']},%"];
        //机构筛选
        if (!empty($data['st_id'])) $where['a.shop_id'] = $data['st_id'];

        $list =  D('Activity')
            ->alias('a')
            ->join('LEFT JOIN __ACTIVITY_CATE__ ac ON a.cate_id = ac.id')
            ->join("LEFT JOIN __ACTIVITY_START__ acs ON a.id = acs.act_id")
            ->field('a.id,a.title,a.extra_title,a.img,a.age_max,a.age_min ,a.target,a.money,a.spell_refund,a.spell,a.now_num,ac.name cate_name')
            ->where($where)
            ->page($page,8)
            ->select();
//        print_r(D('Activity')->getLastSql());die;
        if($list){
            foreach ($list as &$item){
                if ($item['age_max'] == 0) {
                    $item['age_title'] = $item['age_min'].'岁以上';
                } else {
                    $item['age_title'] = $item['age_min'].'-'.$item['age_max'].'岁';
                }
                $aod_count = $activity_order
                    ->alias('ao')
                    ->join('LEFT JOIN __ACT_ORDER_DETAIL__ aod ON ao.id = aod.order_id')
                    ->where(['ao.status'=>['in',[2,3]],'ao.activity_id'=>$item['id']])
                    ->field("count('aod.*') aod_count")
                    ->find();
                $item['sign_up_num'] = $aod_count['aod_count']+$item['now_num'];
                unset($aod_count);
                unset($item['now_num']);
                unset($item['age_max']);
                unset($item['age_min']);
            }
            $this->ApiReturn(1,'成功',$list);
        }else{
            $this->ApiReturn(0,'成功',[]);
        }
    }

    /**
     * 详情
     */
    public function details()
    {
        $data = $this->data;
        $id = $data['id']?$data['id']:0;
        $uid = S($data['token']);
        $code = -1;
        $msg = '缺少必填参数';
       if($id){
           $Activity = D('Activity');
//           $field = 'id,title,extra_title,shop_id,img,target,money,comments,age_instrument,taken_station_instrument,customer_tel,spell,spell_max,spell_refund';
//           if ($data['request'] == 'web') {
               $field = 'id,title,extra_title,fee_description,content,now_num,purchase_instructions,itinerary_description,shop_id,img,target,money,comments,age_instrument,taken_station_instrument,customer_tel,spell,spell_max,spell_refund';
//           }
           $item = $Activity
               ->where(['id'=>$id])
               ->field($field)
               ->find();
           $code = 0;
           $msg  = 'success';
           if ($item) {
//               if ($data['request'] != 'web') {
//                   $item['content'] = 'http://'.$_SERVER['HTTP_HOST'].'/Client/Activity/a_detail_html?id='.$id.'&type=1';
//                   $item['fee_description'] = 'http://'.$_SERVER['HTTP_HOST'].'/Client/Activity/a_detail_html?id='.$id.'&type=2';
//                   $item['purchase_instructions'] = 'http://'.$_SERVER['HTTP_HOST'].'/Client/Activity/a_detail_html?id='.$id.'&type=3';
//                   $item['itinerary_description'] = 'http://'.$_SERVER['HTTP_HOST'].'/Client/Activity/a_detail_html?id='.$id.'&type=4';
//               }
               //是否收藏
               $item['is_collection'] = 0;
               if ($uid) {
                   if (M('activity_collection')->where(['p_id'=>$uid,'activity_id'=>$id])->getField('id')) {
                       $item['is_collection'] = 1;
                   }
               }
               $item['imgs'] = D("Photos")->where(array('item_id'=>$id,'type'=>1))->select();
               $item['sing_times'] = D('AroundTime')->where(array('item_type'=>1,'item_id'=>$id))->order('start ')->select();
               foreach ($item['sing_times'] as &$sing_time) {
                   $weekarray=array("日","一","二","三","四","五","六");
                   $sing_time['start'] = date('m',strtotime($sing_time['start'])).'月'.date('d',strtotime($sing_time['start'])).'日'." 星期".$weekarray[date("w",strtotime($sing_time['start']))];;
               }
               $item['attrs'] = D('ActivityAttr')->where(array('act_id'=>$id))->select();
               $ActivityComment = D('ActivityComment');
               $item['commentsList'] = $ActivityComment
                   ->alias('c')
                   ->join('left join __PARENTS__ m on c.user_id = m.id')
                   ->where(array('c.act_id'=>$id,'to_user_id'=>0,'to_comment_id'=>0))
                   ->field('c.id,c.create_time,c.content,m.p_img as avatar,m.parent_name as name')
                   ->order('c.create_time desc')
                   ->find();

               $aod_count = D('activity_order')
                   ->alias('ao')
                   ->join('LEFT JOIN __ACT_ORDER_DETAIL__ aod ON ao.id = aod.order_id')
                   ->where(['ao.status'=>['in',[2,3]],'ao.activity_id'=>$id])
                   ->field("count('aod.*') aod_count")
                   ->find();
               $item['commentsList']['act_people_num'] = $aod_count['aod_count']+$item['now_num'];
               $item['commentsList']['activity_count'] = $ActivityComment
                       ->alias('c')
                       ->join('left join __PARENTS__ m on c.user_id = m.id')
                       ->where(array('c.act_id'=>$id))
                       ->field('c.id,c.create_time,c.content,m.p_img as avatar,m.parent_name as name')
                       ->order('c.create_time desc')
                       ->count()??0;
               unset($aod_count);
               unset($item['now_num']);
               if ($item['shop_id'] == 0) {
                   $item['shop']['s_name'] = "大唐伯乐平台";
                   $item['shop']['s_img'] = "/public/images/touxiang.jpg";
                   $item['shop']['id'] = -1;
               } else {
                   $item['shop'] = M('small_table')
                       ->where(['id'=>$item['shop_id']])
                       ->field('id,s_name,s_img,s_content as introduction')
                       ->find();
               }
               $aod_count = D('activity_order')
                   ->alias('ao')
                   ->join('LEFT JOIN __ACT_ORDER_DETAIL__ aod ON ao.id = aod.order_id')
                   ->where(['ao.status'=>['in',[2,3]],'ao.st_id'=>$item['shop_id']])
                   ->field("count('aod.*') aod_count")
                   ->find();
               $now_num = $Activity->where(['shop_id'=>$item['shop_id'],'status'=>['neq',4],'state'=>1])->sum('now_num');
               $item['shop']['act_people_num'] = $aod_count['aod_count']+$now_num;
               $item['shop']['activity_count'] = $Activity
                       ->where(['shop_id'=>$item['shop_id'],'status'=>1,'state'=>1])
                       ->count()??0;
               unset($aod_count);
               // 拼团
               $spwhere = ['act_id'=>$id,'status'=>1];
               if ($data['spell_id']) $spwhere['spell_id'] = $data['spell_id'];
               $spell = D("ActivitySpell")
                   ->where($spwhere)
                   ->field('id,create_time,people_num,current_num')
                   ->order('create_time')
                   ->limit(1)
                   ->select();

               foreach ($spell as $q => &$p) {
                   $od = D("ActivityOrder")
                       ->alias('o')
                       ->join('__PARENTS__ p on o.uid = p.id')
                       ->where(array('o.spell_id'=>$p['id']))
                       ->field('p.p_img as avatar,p.id as user_id,p.parent_name as uname')
                       ->select();
                   $p['users'] = $od;
               }
               $item['spells'] = $spell;
               $code = 1;
           }
       }
        $this->ApiReturn($code,$msg,$item);
    }

    /*
     * 详情【产品特色】【6日行程】【费用说明】【购买须知】
     */
    public function a_detail_html()
    {
        $data = $this->data;
        $id = $data['id']?$data['id']:0;
        $type = $data['type']; //1产品特色 26日行程 3费用说明 4购买须知
        $type_name = [1=>'content',2=>'fee_description',3=>'purchase_instructions',4=>'itinerary_description'];
        if($id && in_array($type,[1,2,3,4])) {
            $Activity = D('Activity');
            $item = $Activity
                ->where(['id' => $id])
                ->getField($type_name[$type]);
//           echo  $html = "<!DOCTYPE html>
//                    <html>
//                    <head>
//                    <meta charset=\"utf-8\"/>
//                    <meta name=\"viewport\" content=\"width=device-width,height=device-height,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\">
//                    </head>
//                    <body>{$item}</body>
//                    </html>";
//           die;
        }
        $this->ApiReturn(1,'成功',['html'=>$item]);
    }

    /*
     * 活动收藏(添加收藏&取消收藏)
     */
    public function collection()
    {
        $data = $this->data;
        $id = S($data['token'])?S($data['token']):$this->ApiReturn(2003,'token无效或已过期');
        $act_id = $data['act_id']?$data['act_id']:$this->ApiReturn(-1,'缺少活动');
        $activity_collection = M('activity_collection');
        $where = ['activity_id'=>$act_id,'p_id'=>$id];
        if ($id = $activity_collection->where($where)->getField('id')) {
            if ($activity_collection->delete($id)) {
                $this->ApiReturn(1,'取消成功');
            } else {
                $this->ApiReturn(-1,'取消失败');
            }
        } else {
            if ($activity_collection->add($where)) {
                $this->ApiReturn(1,'收藏成功');
            } else {
                $this->ApiReturn(-1,'收藏失败');
            }
        }
    }

    /*
     * 活动收藏列表
     */
    public function collection_list()
    {
        $data = $this->data;
        $id = S($data['token'])??$this->ApiReturn(2003,'token无效或已过期');
        $page = $data['page']?$data['page']:1;
        $activity_collection = M('activity_collection');
        $where = ['ac.p_id'=>$id,'a.status'=>1,'a.state'=>1];
        $list = $activity_collection
            ->alias('ac')
            ->join('LEFT JOIN __ACTIVITY__ a ON a.id = ac.activity_id')
            ->field('a.id,a.title,a.img,a.age_max,a.age_min,a.target,a.money')
            ->where($where)
            ->page($page,8)
            ->order('ac.id desc')
            ->select();
        if ($list) {
            $activity_order = D('activity_order');
            foreach ($list as &$item) {
                if ($item['age_max'] == 0) {
                    $item['age_title'] = $item['age_min'].'岁以上';
                } else {
                    $item['age_title'] = $item['age_min'].'-'.$item['age_max'].'岁';
                }
                $aod_count = $activity_order
                    ->alias('ao')
                    ->join('LEFT JOIN __ACT_ORDER_DETAIL__ aod ON ao.id = aod.order_id')
                    ->where(['ao.status'=>['in',[2,3]],'ao.activity_id'=>$item['id']])
                    ->field("count('aod.*') aod_count")
                    ->find();
                $item['sign_up_num'] = $aod_count['aod_count'];
                unset($aod_count);
                unset($item['age_max']);
                unset($item['age_min']);
            }
            $this->ApiReturn(1,'success',$list);
        } else {
            $this->ApiReturn(0,'success',$list);
        }
    }


    /**
     *  获取评论列表
     */
    public function comments()
    {
        $data = $this->data;
        $uid = S($data['token']);
        $pageNo = $data['page']?$data['page']:1;
        $act_id = $data['act_id']?$data['act_id']:$this->ApiReturn(-1,'缺少必传参数act_id');
        $where = array(
            'c.act_id' => $act_id,
            'c.to_user_id'=>0,
            'c.to_comment_id'=>0
        );
        $count = D('ActivityComment')
            ->alias('c')
            ->join('left join __PARENTS__ u on c.user_id = u.id')
            ->where($where)
            ->count();
        $page = new Page($count,8);
        $page->show();
        $totalPages = $page->totalPages;
        $list = D('ActivityComment')
            ->alias('c')
            ->join('left join __PARENTS__ u on c.user_id = u.id')
            ->where($where)
            ->page($pageNo,8)
            ->field('c.id,c.act_id,c.user_id,c.create_time,c.content,u.parent_name as user_name,u.p_img as avatar')
            ->order('c.create_time desc')
            ->select();

        foreach ($list as &$item){
            $item['create_time'] = current(explode(' ',$item['create_time']));
            $item['del_status'] = "0";//不可删除
            //如果是用户评论的
            if ($uid && $uid == $item['user_id']) {
                $item['del_status'] = "1";//可删除
            }
            $reply = D('ActivityComment')
                ->alias('c')
                ->join('left join __PARENTS__ u on c.user_id = u.id')
                ->join('left join __PARENTS__ t on c.to_user_id = t.id')
                ->where(array(
                    'c.to_comment_id'=>$item['id']
                ))
                ->field('c.id,c.user_id,c.to_comment_id,c.create_time,c.content,u.parent_name as user_name,u.p_img as avatar,t.parent_name at')
                ->order('c.create_time desc')
                ->select();
            foreach ($reply as &$value) {
                $value['create_time'] = current(explode(' ',$value['create_time']));
                $value['del_status'] = 0;//不可删除
                //如果是用户评论的
                if ($uid && $uid == $value['user_id']) {
                    $value['del_status'] = 1;//可删除
                }
            }
            $item['reply_no'] = (string)count($reply);
            $item['reply'] = $reply;
        }

        $info = array(
            'list'=>array(),
            'totalPages'=>$totalPages,
            'currentPag'=>$pageNo,
            'total'=>$count
        );

        if($list){
            $info['list'] = $list;
            $this->ApiReturn(1,'成功',$info);
        }else{
            $this->ApiReturn(0,'成功',$info);
        }
    }

    //主办方
    public function shop_detail()
    {
        $data = $this->data;
        if (!$data['shop_id']) $this->ApiReturn(-1,'缺少参数：shop_id');
        if ($data['shop_id'] == -1) {
            $info['introduction'] = strip_tags(M('config')->where(['id'=>1])->getField('about'));
            $info['s_name']       = "大唐伯乐";
            $info['s_img']        = "/public/images/touxiang.jpg";
            $info['banner']       = "/public/images/touxiang.jpg";
            $info['id']           = 0;
            $data['shop_id'] = 0;
        } else {
            $info = M('small_table')
                ->where(['id'=>$data['shop_id']])
                ->field('id,s_name,s_img,s_content as introduction')
                ->find();
            $info['banner'] = M('small_images')->where(['st_id'=>$data['shop_id']])->order('sort,id')->getField('url');
        }
        $activity = M('activity');
        $activity_order = M('activity_order');
        $aod_count = D('activity_order')
            ->alias('ao')
            ->join('LEFT JOIN __ACT_ORDER_DETAIL__ aod ON ao.id = aod.order_id')
            ->where(['ao.status'=>['in',[2,3]],'ao.st_id'=>$data['shop_id']])
            ->field("count('aod.*') aod_count")
            ->find();
        $info['act_people_num'] = $aod_count['aod_count'];
        unset($aod_count);
        $info['activity_count'] = $activity
                ->where(['shop_id'=>$data['shop_id'],'status'=>1,'state'=>1])
                ->count()??0;
        $where = array_merge($this->where,['a.shop_id'=>$data['shop_id'],'a.status'=>1,'a.state'=>1]);
        $info['list'] = $activity
            ->alias('a')
            ->join('LEFT JOIN __ACTIVITY_CATE__ ac ON a.cate_id = ac.id')
            ->join("LEFT JOIN __ACTIVITY_START__ acs ON a.id = acs.act_id")
            ->where($where)
            ->field('a.id,a.title,a.extra_title,a.img,a.age_max,a.age_min ,a.target,a.money,a.spell_refund,a.spell,ac.name cate_name')
            ->page(1,8)
            ->select();
        if($info['list']){
            foreach ($info['list'] as &$item){
                if ($item['age_max'] == 0) {
                    $item['age_title'] = $item['age_min'].'岁以上';
                } else {
                    $item['age_title'] = $item['age_min'].'-'.$item['age_max'].'岁';
                }
                $aod_count = $activity_order
                    ->alias('ao')
                    ->join('LEFT JOIN __ACT_ORDER_DETAIL__ aod ON ao.id = aod.order_id')
                    ->where(['ao.status'=>['in',[2,3]],'ao.activity_id'=>$item['id']])
                    ->field("count('aod.*') aod_count")
                    ->find();
                $item['sign_up_num'] = $aod_count['aod_count'];
                unset($aod_count);
                unset($item['age_max']);
                unset($item['age_min']);
            }
        }
        $this->ApiReturn(1,'成功',$info);

    }

    /*
     * 获取评论详情
     */
     public function commentDetail(){
         $data = $this->data;
         $uid = S($data['token']);
         $act_id = $data['comment_id']?$data['comment_id']:$this->ApiReturn(-1,'缺少必传参数comment_id');
         $comment = D('ActivityComment')
             ->alias('c')
             ->join('left join __PARENTS__ u on c.user_id = u.id')
             ->where(array('c.id'=>$act_id))
             ->field('c.id,c.act_id,c.create_time,c.content,u.parent_name as user_name,u.p_img as avatar')
             ->find();
         $comment['create_time'] = current(explode(' ',$comment['create_time']));
         $comment['del_status'] = "0";//不可删除
         //如果是用户评论的
         if ($uid && $uid == $comment['user_id']) {
             $comment['del_status'] = "1";//可删除
         }
         $replyNo =  D('ActivityComment')
             ->alias('c')
             ->join('left join __PARENTS__ u on c.user_id = u.id')
             ->where(array(
                 'c.to_comment_id'=>$act_id
             ))
             ->count();

         $reply = D('ActivityComment')
             ->alias('c')
             ->join('left join __PARENTS__ u on c.user_id = u.id')
             ->join('left join __PARENTS__ t on c.to_user_id = t.id')
             ->where(array(
                 'c.to_comment_id'=>$act_id
             ))
             ->field('c.id,c.user_id,c.to_comment_id,c.content,c.create_time,u.parent_name as user_name,u.p_img as avatar,t.parent_name at')
             ->order('c.create_time desc')
             ->select();
         foreach ($reply as &$value) {
             $value['create_time'] = current(explode(' ',$value['create_time']));
             $value['del_status'] = "0";//不可删除
             //如果是用户评论的
             if ($uid && $uid == $value['user_id']) {
                 $value['del_status'] = "1";//可删除
             }
         }
         $page = new Page($replyNo,8);
         $page->show();
         $info = $comment;
         $info['replyNo'] = $replyNo;
         $info['pages'] = $page->totalPages;
         $info['reply'] = [];
         if($reply){
             $info['reply'] = $reply;
         }
         $this->ApiReturn(1,'成功',$info);
     }
    /**
     * 删除自己的评论
     */
    public function delComment()
    {
        $data = $this->data;
        $uid = S($data['token']);
        if (!$uid) $this->ApiReturn(20003,'token无效或已过期');
        $cid = $data['comment_id']?$data['comment_id']:$this->ApiReturn(-1,'缺少必传参数comment_id');
        $ActivityComment = D('ActivityComment');
        if (!$ActivityComment->where(['id'=>$cid,'user_id'=>$uid])->find())
            $this->ApiReturn(-1,'评论不存在');

        if ($ActivityComment->delete($cid)) {
            $this->ApiReturn(1,'success');
        } else {
            $this->ApiReturn(-1,'error');
        }
    }
}